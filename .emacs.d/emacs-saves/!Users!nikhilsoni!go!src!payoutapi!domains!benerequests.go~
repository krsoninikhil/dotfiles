package domains

// AddBeneRequest defines request params for /addBeneficiary
type AddBeneRequest struct {
	// TODO: fix excludeall tag
	BeneId      string `json:"beneId" validate:"required,max=50,excludesall=!@#$%^&*(){}[]+-=:;?/0x7C0x2C "` // 0x7C = (|) 0x2C = (,)
	Group       string `json:"group" validate:"max=50,excludesall=!@#$%^&*()+-=:;?/0x7C0x2C "`
	Name        string `json:"name" validate:"required,max=100,excludesall=!@#$%^&*(){}[]_+-=:;?/0x7C0x2C"`
	Email       string `json:"email" validate:"required,email,max=200"`
	Phone       string `json:"phone" validate:"required,numeric,max=11"`
	BankAccount string `json:"bankAccount" validate:"omitempty,alphanum,max=40"`
	IFSC        string `json:"ifsc" validate:"omitempty,alphanum,max=50"`
	VPA         string `json:"vpa" validate:"max=100"`
	CardNo      string `json:"cardNo" validate:"omitempty,numeric,max=50"`
	Address1    string `json:"address1" validate:"required,max=150"`
	Address2    string `json:"address2" validate:"max=150"`
	City        string `json:"address2" validate:"omitempty,alpha,max=50"`
	State       string `json:"address2" validate:"omitempty,alpha,max=50"`
	Pincode     string `json:"pincode" validate:"max=6"`
}

// CreateGroupRequest defines request params for /createGroup
type CreateGroupRequest struct {
	Group       string `json:"group" validate:"required,max=50,excludesall=!@#$%^&*()[]{}+-=:;?/0x7C0x2C "`
	Description string `json:"description" validate:"max=50"`
}

type GetBeneIDRequest struct {
	BankAccount string `json:"bankAccount" validate:"required,alphanum,min=6,max=40"`
	IFSC        string `json:"ifsc" validate:"required,alphanum,max=50"`
}

type RemoveBeneRequest struct {
	BeneID string `json:"beneId" validate:"required,max=50"`
}
