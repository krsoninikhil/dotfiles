#!/usr/bin/env groovy
def appName = 'cfutilservice'

podTemplate(label: 'build-go',
    containers: [
        containerTemplate(name: 'golang', image: 'golang:1.12', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'docker', image: 'docker-registry.cashfree.com/cashfree-docker:latest', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'sonar-scanner', image: 'docker-registry.cashfree.com/cashfree-sonar-scanner:latest', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.0', command: 'cat', ttyEnabled: true)
    ],
    imagePullSecrets: ['regsecret'],
    volumes: [
        hostPathVolume(hostPath: '/jenkins/go/pkg', mountPath: '/dep/pkg'),
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')
    ]
  ) {
    node('build-go') {

      def deploymentId = UUID.randomUUID().toString()
        def myRepo = checkout scm
        def gitBranch = myRepo.GIT_BRANCH
        def commit = myRepo.GIT_COMMIT
        def isPr = false
        def masterBranch = 'PR-5';
        if(env.CHANGE_ID) {
          isPr = true
        }

        if (gitBranch == masterBranch) {
          stage('build') {
            container('golang') {
              sh """
              ln -s /dep/pkg \$GOPATH/pkg
              echo '${appName}'
              go get -u github.com/golang/dep/cmd/dep
              ln -s \$(realpath .) \$GOPATH/src/${appName}
              cd \$GOPATH/src/${appName}
              make local
	      make linux
              """
              // Need to send report to sonarqube here
            }
          }
        }


        stage('sonar-generation') {
          container('sonar-scanner') {
              withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_TOKEN')]) {
                sh """
                sonar-scanner -Dsonar.login=${SONAR_TOKEN}
                """
              }
          }
        }

        stage('docker build and push') {
            if (gitBranch == masterBranch) {
            container('docker') {
              withCredentials([[$class: 'UsernamePasswordMultiBinding',
                  credentialsId: 'nexus',
                  usernameVariable: 'NEXUS_USER',
                  passwordVariable: 'NEXUS_PASSWORD']]) {
                  sh """
                  docker login docker-registry.cashfree.com -u ${NEXUS_USER} -p ${NEXUS_PASSWORD}
                  docker build -t ${appName} .
                  docker tag ${appName} docker-registry.cashfree.com/${appName}
                  docker push docker-registry.cashfree.com/${appName}:latest
                  """
                  }
              }
            }
          }
        stage("Deploy to k8s") {
          if (gitBranch == masterBranch) {
            container('kubectl') {
              sh "kubectl apply -f  k8s/master/configmap.yaml"
              sh "cat k8s/master/deployment.yaml | sed \"s/{{DEPLOYMENT_ID}}/${commit}/g\" | kubectl apply -f -"
              sh "kubectl apply -f  k8s/master/service.yaml"
            }
          }
        }
    }
}