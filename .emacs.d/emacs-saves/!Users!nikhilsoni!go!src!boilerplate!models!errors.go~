/* CASHFREE INC. PROPRIETARY AND CONFIDENTIAL
 * ------------------------------------------
 * Copyright (C) Cashfree Inc - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 *
 * Description: Define application errors, repository layer return these to service layer
 *
 * Author: Nikhil Soni <nikhil@cashfree.com> April, 2019
 */

package domains

import "errors"

// InvalidRequestError is used when there is some problem with request parameters
type InvalidRequestError struct {
	AppError
}

// InvalidOpError is used when requested operation cannot be performed
type InvalidOpError struct {
	AppError
}

// NotFoundError is used when requested details are not found for the given params
type NotFoundError struct {
	AppError
}

// ServerError is used for unexpected errors in application
type ServerError struct {
	AppError
}

// InvalidCredsError is used for invalid credentials
type InvalidCredsError struct {
	AppError
}

// UnauthorizedError is used when operation in not permitted to given user
type UnauthorizedError struct {
	AppError
}

// AppError implements error interface and can be used to define custom error types
type AppError struct {
	Msg string
}

// Error returns the error message
func (a AppError) Error() string {
	return a.Msg
}

var (
	// ErrBadCacheKey is used for bad key
	ErrBadCacheKey = errors.New("Key used is bad, either it is longer than 250 bytes or contains unacceptble characters")
	// ErrCacheMiss is used on error in fetching
	ErrCacheMiss = errors.New("Key is not present")
	// ErrWritingCache is used on error in writing
	ErrWritingCache = errors.New("Error writing to cache")
	// ErrCacheInternal is used in case of internal errors
	ErrCacheInternal = errors.New("Cache Internal Server Error")
	// ErrParamMissing is used in case required param is missing in bulk transfer request
	ErrParamMissing = errors.New("Parameters missing in request")
)
