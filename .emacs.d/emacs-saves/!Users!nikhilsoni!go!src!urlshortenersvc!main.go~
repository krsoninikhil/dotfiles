package main

import (
	"urlshortenersvc/config"
	"urlshortenersvc/validator"
	"fmt"
	"log"

	"github.com/labstack/echo"
	"github.com/labstack/echo/middleware"
)

func main() {
	// load configuration
	cfg := config.LoadConfig()
	if cfg.Debug {
		log.Println("Running in DEBUG mode")
	}

	// creating http client here to maintain connection cache
	// client := repoimplhttp.Init(fmt.Sprintf("%ds", cfg.Timeout))
	// cache := cacheimpl.Init(cfg.SvcBase.Cache)

	// configure echo with middlewares
	e := echo.New()
	e.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{
		Format: "[${time_rfc3339}] ${method} ${uri} ${status}\n",
	}))
	if cfg.Stage != "DEVO" {
		e.Use(middleware.Recover()) // not used in DEVO to avoid error stack trace getting logged as JSON
	}
	e.Validator = validator.Init()

	// inject required serivce and repository implementations in delivery layer

	// Start the server
	e.Logger.Fatal(e.Start(fmt.Sprintf(":%s", cfg.Port)))
}
