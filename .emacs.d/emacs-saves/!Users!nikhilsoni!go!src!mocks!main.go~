package main

import (
	"fmt"
	"log"
	"net/http"
)

const (
	post   = "POST"
	get    = "GET"
	delete = "DELETE"
)

func main() {
	http.HandleFunc("/accounts/1/beneficiaries", beneCreateHandler)
	http.HandleFunc("/accounts/1/groups", groupCreateHandler)
	http.HandleFunc("/accounts/1/transfers", transferCreateHandler)
	http.HandleFunc("/accounts/1/transfers/1", transferGetHandler)
	http.HandleFunc("/accounts/1/transfers/transfer-id/1", transferGetHandler)
	http.HandleFunc("/verify", authVerify)

	log.Fatal(http.ListenAndServe(":8080", nil))
}

func beneCreateHandler(w http.ResponseWriter, r *http.Request) {
	log.Println(r.URL.Path)
	if r.Method == post {
		w.WriteHeader(http.StatusCreated)
		_, _ = fmt.Fprint(w, `{"id":1, "message": "created! yay!"}`)
	} else if r.Method == get {
		_, _ = fmt.Fprint(w, `{"beneId":"blah1","name":"blahName"}`)
	}

}

func groupCreateHandler(w http.ResponseWriter, r *http.Request) {
	log.Println(r.URL.Path)
	if r.Method == post {
		_, _ = fmt.Fprint(w, `{"id":1, "message": "created! yay!"}`)
	}
}

func transferCreateHandler(w http.ResponseWriter, r *http.Request) {
	log.Println(r.URL.Path)
	if r.Method == post {
		w.WriteHeader(http.StatusCreated)
		_, _ = fmt.Fprint(w, `{"id":1, "message": "created! yay!", "acknowledged": 1, "utr": "utr123123", "referenceId": "123"}`)
	}
}

func transferGetHandler(w http.ResponseWriter, r *http.Request) {
	log.Println(r.URL.Path)
	if r.Method == get {
		_, _ = fmt.Fprint(w, `{"amount": "1.2"}`)
	}
}

func authVerify(w http.ResponseWriter, r *http.Request) {
	log.Println(r.URL.Path)
	if r.Method == post {
		_, _ = fmt.Fprint(w, `{"accountId": "1"}`)
	}
}
